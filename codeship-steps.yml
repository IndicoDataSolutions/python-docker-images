- type: serial
  tag: "test"
  steps:
    - name: test-1
      service: test-1
      command: echo "Success"

    - name: test-2
      service: test-2
      command: echo "Success"

    - name: test-3
      service: test-3
      command: echo "Success"

    - name: test-4
      service: test-4
      command: echo "Success"
- type: serial
  dockercfg_service: gcr-dockercfg
  tag: "^(latest)$"
  name: push-images
  steps:
    - type: parallel
      steps:
        - name: alpine-3-9-3
          type: push
          service: alpine-3-9-3
          registry: https://gcr.io
          image_name: gcr.io/new-indico/alpine
          image_tag: "3.9.3"
          dockercfg_service: gcr-dockercfg

        - name: ubuntu-18-04
          type: push
          service: ubuntu-18-04
          registry: https://gcr.io
          image_name: gcr.io/new-indico/ubuntu
          image_tag: 18.04
          dockercfg_service: gcr-dockercfg

        - name: tensorflow-ubuntu-1.14.0
          type: push
          service: tensorflow-ubuntu
          registry: https://gcr.io
          image_name: gcr.io/new-indico/tensorflow-ubuntu
          image_tag: 1.14.0
          dockercfg_service: gcr-dockercfg

        - name: rocksdb
          type: push
          service: rocksdb
          registry: https://gcr.io
          image_name: gcr.io/new-indico/rocksdb
          image_tag: v6.15.5
          dockercfg_service: gcr-dockercfg

        - name: atmosphere
          type: push
          service: atmosphere
          registry: https://gcr.io
          image_name: gcr.io/new-indico/atmosphere-ubuntu
          image_tag: "{{.Branch}}"
          dockercfg_service: gcr-dockercfg

        - name: ubuntu_gpu
          type: push
          service: ubuntu-gpu
          registry: https://gcr.io
          image_name: gcr.io/new-indico/ubuntu_gpu
          image_tag: "{{.Branch}}"
          dockercfg_service: gcr-dockercfg

        - name: numpy-ubuntu
          type: push
          service: numpy-ubuntu
          registry: https://gcr.io
          image_name: gcr.io/new-indico/numpy-ubuntu
          image_tag: "1.15.4"
          dockercfg_service: gcr-dockercfg

        - name: numpy-ubuntu-1.18.4
          type: push
          service: numpy-ubuntu-1.18.4
          registry: https://gcr.io
          image_name: gcr.io/new-indico/numpy-ubuntu
          image_tag: "1.18.4"
          dockercfg_service: gcr-dockercfg

        - name: aws
          type: push
          service: aws
          registry: https://gcr.io
          image_name: gcr.io/new-indico/aws
          image_tag: "{{.Branch}}"
          dockercfg_service: gcr-dockercfg

        - name: nginx-uploader
          type: push
          service: nginx-uploader
          registry: https://gcr.io
          image_name: gcr.io/new-indico/nginx-uploader
          image_tag: "{{.CommitID}}"
          dockercfg_service: gcr-dockercfg

        - name: flower
          type: push
          service: flower
          registry: https://gcr.io
          image_name: gcr.io/new-indico/flower
          image_tag: "{{.Branch}}"
          dockercfg_service: gcr-dockercfg

        - name: nvidia-install
          type: push
          service: nvidia-install
          registry: https://gcr.io
          image_name: gcr.io/new-indico/nvidia-install
          image_tag: "{{.Branch}}"
          dockercfg_service: gcr-dockercfg

    - type: parallel
      steps:
        - name: faust-deps
          type: push
          service: faust-deps
          registry: https://gcr.io
          image_name: gcr.io/new-indico/faust-deps
          image_tag: 0.4.6
          dockercfg_service: gcr-dockercfg
  
        - name: scipy-ubuntu
          type: push
          service: scipy-ubuntu
          registry: https://gcr.io
          image_name: gcr.io/new-indico/scipy-ubuntu
          image_tag: "1.1.0"
          dockercfg_service: gcr-dockercfg

        - name: pandas-ubuntu
          type: push
          service: pandas-ubuntu
          registry: https://gcr.io
          image_name: gcr.io/new-indico/pandas-ubuntu
          image_tag: "0.23.4"
          dockercfg_service: gcr-dockercfg

        - name: pandas-ubuntu-1.0.3
          type: push
          service: pandas-ubuntu-1.0.3
          registry: https://gcr.io
          image_name: gcr.io/new-indico/pandas-ubuntu
          image_tag: "1.0.3"
          dockercfg_service: gcr-dockercfg

    - type: parallel
      steps:
        - name: tsne-ubuntu
          type: push
          service: tsne-ubuntu
          registry: https://gcr.io
          image_name: gcr.io/new-indico/tsne-ubuntu
          image_tag: "{{.Branch}}"
          dockercfg_service: gcr-dockercfg

        - name: sklearn-ubuntu
          type: push
          service: sklearn-ubuntu
          registry: https://gcr.io
          image_name: gcr.io/new-indico/sklearn-ubuntu
          image_tag: "0.19.2"
          dockercfg_service: gcr-dockercfg

- type: serial
  name: scan-images
  steps:
    - name: alpine-3-9-3-anchorestep
      service: anchorescan
      command: sh -c 'echo "Adding image gcr.io/new-indico/alpine:3.9.3 to Anchore engine" && 
        anchore-cli image add gcr.io/new-indico/alpine:3.9.3 &&
        echo "Waiting for image analysis to complete" &&
        anchore-cli image wait gcr.io/new-indico/alpine:3.9.3 &&
        echo "Analysis complete" &&
        anchore-cli image vuln gcr.io/new-indico/alpine:3.9.3 all | grep -v Low | grep -v Negligible | grep -v Medium &&
        if [ "$ANCHORE_FAIL_ON_POLICY" == "true" ] ; then anchore-cli evaluate check gcr.io/new-indico/alpine:3.9.3  ; fi'
      encrypted_env_file: env.encrypted

    - name: ubuntu-18-04-anchorestep
      service: anchorescan
      command: sh -c 'echo "Adding image gcr.io/new-indico/ubuntu:18.04 to Anchore engine" && 
        anchore-cli image add gcr.io/new-indico/ubuntu:18.04 &&
        echo "Waiting for image analysis to complete" &&
        anchore-cli image wait gcr.io/new-indico/ubuntu:18.04 &&
        echo "Analysis complete" &&
        anchore-cli image vuln gcr.io/new-indico/ubuntu:18.04 all | grep -v Low | grep -v Negligible | grep -v Medium &&
        if [ "$ANCHORE_FAIL_ON_POLICY" == "true" ] ; then anchore-cli evaluate check gcr.io/new-indico/ubuntu:18.04  ; fi'
      encrypted_env_file: env.encrypted
    
    - name: tensorflow-ubuntu-1.14.0-anchorestep
      service: anchorescan
      command: sh -c 'echo "Adding image gcr.io/new-indico/tensorflow-ubuntu:1.14.0 to Anchore engine" && 
        anchore-cli image add gcr.io/new-indico/tensorflow-ubuntu:1.14.0 &&
        echo "Waiting for image analysis to complete" &&
        anchore-cli image wait gcr.io/new-indico/tensorflow-ubuntu:1.14.0 &&
        echo "Analysis complete" &&
        anchore-cli image vuln gcr.io/new-indico/tensorflow-ubuntu:1.14.0 all | grep -v Low | grep -v Negligible | grep -v Medium &&
        if [ "$ANCHORE_FAIL_ON_POLICY" == "true" ] ; then anchore-cli evaluate check gcr.io/new-indico/tensorflow-ubuntu:1.14.0  ; fi'
      encrypted_env_file: env.encrypted

    - name: rocksdb-anchorestep
      service: anchorescan
      command: sh -c 'echo "Adding image gcr.io/new-indico/rocksdb:v6.15.5 to Anchore engine" && 
        anchore-cli image add gcr.io/new-indico/rocksdb:v6.15.5 &&
        echo "Waiting for image analysis to complete" &&
        anchore-cli image wait gcr.io/new-indico/rocksdb:v6.15.5 &&
        echo "Analysis complete" &&
        anchore-cli image vuln gcr.io/new-indico/rocksdb:v6.15.5 all | grep -v Low | grep -v Negligible | grep -v Medium &&
        if [ "$ANCHORE_FAIL_ON_POLICY" == "true" ] ; then anchore-cli evaluate check gcr.io/new-indico/rocksdb:v6.15.5  ; fi'
      encrypted_env_file: env.encrypted

    - name: atmosphere-anchorestep
      service: anchorescan
      command: sh -c 'echo "Adding image gcr.io/new-indico/atmosphere-ubuntu:latest to Anchore engine" && 
        anchore-cli image add gcr.io/new-indico/atmosphere-ubuntu:latest &&
        echo "Waiting for image analysis to complete" &&
        anchore-cli image wait gcr.io/new-indico/atmosphere-ubuntu:latest &&
        echo "Analysis complete" &&
        anchore-cli image vuln gcr.io/new-indico/atmosphere-ubuntu:latestall | grep -v Low | grep -v Negligible | grep -v Medium &&
        if [ "$ANCHORE_FAIL_ON_POLICY" == "true" ] ; then anchore-cli evaluate check gcr.io/new-indico/atmosphere-ubuntu:latest ; fi'
      encrypted_env_file: env.encrypted

    - name: ubuntu_gpu-anchorestep
      service: anchorescan
      command: sh -c 'echo "Adding image gcr.io/new-indico/ubuntu_gpu:latest to Anchore engine" && 
        anchore-cli image add gcr.io/new-indico/ubuntu_gpu:latest &&
        echo "Waiting for image analysis to complete" &&
        anchore-cli image wait gcr.io/new-indico/ubuntu_gpu:latest &&
        echo "Analysis complete" &&
        anchore-cli image vuln gcr.io/new-indico/ubuntu_gpu:latest all | grep -v Low | grep -v Negligible | grep -v Medium &&
        if [ "$ANCHORE_FAIL_ON_POLICY" == "true" ] ; then anchore-cli evaluate check gcr.io/new-indico/ubuntu_gpu:latest  ; fi'
      encrypted_env_file: env.encrypted

    - name: numpy-ubuntu-anchorestep
      service: anchorescan
      command: sh -c 'echo "Adding image gcr.io/new-indico/numpy-ubuntu:1.15.4 to Anchore engine" && 
        anchore-cli image add gcr.io/new-indico/numpy-ubuntu:1.15.4 &&
        echo "Waiting for image analysis to complete" &&
        anchore-cli image wait gcr.io/new-indico/numpy-ubuntu:1.15.4 &&
        echo "Analysis complete" &&
        anchore-cli image vuln gcr.io/new-indico/numpy-ubuntu:1.15.4 all | grep -v Low | grep -v Negligible | grep -v Medium &&
        if [ "$ANCHORE_FAIL_ON_POLICY" == "true" ] ; then anchore-cli evaluate check gcr.io/new-indico/numpy-ubuntu:1.15.4  ; fi'
      encrypted_env_file: env.encrypted

    - name: numpy-ubuntu-1.18.4-anchorestep
      service: anchorescan
      command: sh -c 'echo "Adding image gcr.io/new-indico/numpy-ubuntu:1.18.4 to Anchore engine" && 
        anchore-cli image add gcr.io/new-indico/numpy-ubuntu:1.18.4 &&
        echo "Waiting for image analysis to complete" &&
        anchore-cli image wait gcr.io/new-indico/numpy-ubuntu:1.18.4 &&
        echo "Analysis complete" &&
        anchore-cli image vuln gcr.io/new-indico/numpy-ubuntu:1.18.4 all | grep -v Low | grep -v Negligible | grep -v Medium &&
        if [ "$ANCHORE_FAIL_ON_POLICY" == "true" ] ; then anchore-cli evaluate check gcr.io/new-indico/numpy-ubuntu:1.18.4  ; fi'
      encrypted_env_file: env.encrypted

    - name: aws-anchorestep
      service: anchorescan
      command: sh -c 'echo "Adding image gcr.io/new-indico/aws:latest to Anchore engine" && 
        anchore-cli image add gcr.io/new-indico/aws:latest &&
        echo "Waiting for image analysis to complete" &&
        anchore-cli image wait gcr.io/new-indico/aws:latest &&
        echo "Analysis complete" &&
        anchore-cli image vuln gcr.io/new-indico/aws:latest all | grep -v Low | grep -v Negligible | grep -v Medium &&
        if [ "$ANCHORE_FAIL_ON_POLICY" == "true" ] ; then anchore-cli evaluate check gcr.io/new-indico/aws:latest  ; fi'
      encrypted_env_file: env.encrypted

    - name: nginx-uploader-anchorestep
      service: anchorescan
      command: sh -c 'echo "Adding image gcr.io/new-indico/nginx-uploader:latest to Anchore engine" && 
        anchore-cli image add gcr.io/new-indico/nginx-uploader:latest &&
        echo "Waiting for image analysis to complete" &&
        anchore-cli image wait gcr.io/new-indico/nginx-uploader:latest &&
        echo "Analysis complete" &&
        anchore-cli image vuln gcr.io/new-indico/nginx-uploader:latest all | grep -v Low | grep -v Negligible | grep -v Medium &&
        if [ "$ANCHORE_FAIL_ON_POLICY" == "true" ] ; then anchore-cli evaluate check gcr.io/new-indico/nginx-uploader:latest  ; fi'
      encrypted_env_file: env.encrypted

    - name: flower-anchorestep
      service: anchorescan
      command: sh -c 'echo "Adding image gcr.io/new-indico/flower:latest to Anchore engine" && 
        anchore-cli image add gcr.io/new-indico/flower:latest &&
        echo "Waiting for image analysis to complete" &&
        anchore-cli image wait gcr.io/new-indico/flower:latest &&
        echo "Analysis complete" &&
        anchore-cli image vuln gcr.io/new-indico/flower:latest all | grep -v Low | grep -v Negligible | grep -v Medium &&
        if [ "$ANCHORE_FAIL_ON_POLICY" == "true" ] ; then anchore-cli evaluate check gcr.io/new-indico/flower:latest  ; fi'
      encrypted_env_file: env.encrypted

    - name: nvidia-install-anchorestep
      service: anchorescan
      command: sh -c 'echo "Adding image gcr.io/new-indico/nvidia-install:latest to Anchore engine" && 
        anchore-cli image add gcr.io/new-indico/nvidia-install:latest &&
        echo "Waiting for image analysis to complete" &&
        anchore-cli image wait gcr.io/new-indico/nvidia-install:latest &&
        echo "Analysis complete" &&
        anchore-cli image vuln gcr.io/new-indico/nvidia-install:latest all | grep -v Low | grep -v Negligible | grep -v Medium &&
        if [ "$ANCHORE_FAIL_ON_POLICY" == "true" ] ; then anchore-cli evaluate check gcr.io/new-indico/nvidia-install:latest  ; fi'
      encrypted_env_file: env.encrypted

    - name: faust-deps-anchorestep
      service: anchorescan
      command: sh -c 'echo "Adding image gcr.io/new-indico/faust-deps:0.4.6 to Anchore engine" && 
        anchore-cli image add gcr.io/new-indico/faust-deps:0.4.6 &&
        echo "Waiting for image analysis to complete" &&
        anchore-cli image wait gcr.io/new-indico/faust-deps:0.4.6 &&
        echo "Analysis complete" &&
        anchore-cli image vuln gcr.io/new-indico/faust-deps:0.4.6 all | grep -v Low | grep -v Negligible | grep -v Medium &&
        if [ "$ANCHORE_FAIL_ON_POLICY" == "true" ] ; then anchore-cli evaluate check gcr.io/new-indico/faust-deps:0.4.6  ; fi'
      encrypted_env_file: env.encrypted

    - name: scipy-ubuntu-anchorestep
      service: anchorescan
      command: sh -c 'echo "Adding image gcr.io/new-indico/scipy-ubuntu:1.1.0 to Anchore engine" && 
        anchore-cli image add gcr.io/new-indico/scipy-ubuntu:1.1.0 &&
        echo "Waiting for image analysis to complete" &&
        anchore-cli image wait gcr.io/new-indico/scipy-ubuntu:1.1.0 &&
        echo "Analysis complete" &&
        anchore-cli image vuln gcr.io/new-indico/scipy-ubuntu:1.1.0 all | grep -v Low | grep -v Negligible | grep -v Medium &&
        if [ "$ANCHORE_FAIL_ON_POLICY" == "true" ] ; then anchore-cli evaluate check gcr.io/new-indico/scipy-ubuntu:1.1.0  ; fi'
      encrypted_env_file: env.encrypted

    - name: pandas-ubuntu-anchorestep
      service: anchorescan
      command: sh -c 'echo "Adding image gcr.io/new-indico/pandas-ubuntu:0.23.4 to Anchore engine" && 
        anchore-cli image add gcr.io/new-indico/pandas-ubuntu:0.23.4 &&
        echo "Waiting for image analysis to complete" &&
        anchore-cli image wait gcr.io/new-indico/pandas-ubuntu:0.23.4 &&
        echo "Analysis complete" &&
        anchore-cli image vuln gcr.io/new-indico/pandas-ubuntu:0.23.4 all | grep -v Low | grep -v Negligible | grep -v Medium &&
        if [ "$ANCHORE_FAIL_ON_POLICY" == "true" ] ; then anchore-cli evaluate check gcr.io/new-indico/pandas-ubuntu:0.23.4  ; fi'
      encrypted_env_file: env.encrypted

    - name: pandas-ubuntu-1.0.3-anchorestep
      service: anchorescan
      command: sh -c 'echo "Adding image gcr.io/new-indico/pandas-ubuntu:1.0.3 to Anchore engine" && 
        anchore-cli image add gcr.io/new-indico/pandas-ubuntu:1.0.3 &&
        echo "Waiting for image analysis to complete" &&
        anchore-cli image wait gcr.io/new-indico/pandas-ubuntu:1.0.3 &&
        echo "Analysis complete" &&
        anchore-cli image vuln gcr.io/new-indico/pandas-ubuntu:1.0.3 all | grep -v Low | grep -v Negligible | grep -v Medium &&
        if [ "$ANCHORE_FAIL_ON_POLICY" == "true" ] ; then anchore-cli evaluate check gcr.io/new-indico/pandas-ubuntu:1.0.3  ; fi'
      encrypted_env_file: env.encrypted

    - name: tsne-ubuntu-anchorestep
      service: anchorescan
      command: sh -c 'echo "Adding image gcr.io/new-indico/tsne-ubuntu:latest to Anchore engine" && 
        anchore-cli image add gcr.io/new-indico/tsne-ubuntu:latest &&
        echo "Waiting for image analysis to complete" &&
        anchore-cli image wait gcr.io/new-indico/tsne-ubuntu:latest &&
        echo "Analysis complete" &&
        anchore-cli image vuln gcr.io/new-indico/tsne-ubuntu:latest all | grep -v Low | grep -v Negligible | grep -v Medium &&
        if [ "$ANCHORE_FAIL_ON_POLICY" == "true" ] ; then anchore-cli evaluate check gcr.io/new-indico/tsne-ubuntu:latest  ; fi'
      encrypted_env_file: env.encrypted

    - name: tsne-ubuntu-anchorestep
      service: anchorescan
      command: sh -c 'echo "Adding image gcr.io/new-indico/sklearn-ubuntu:0.19.2 to Anchore engine" && 
        anchore-cli image add gcr.io/new-indico/sklearn-ubuntu:0.19.2 &&
        echo "Waiting for image analysis to complete" &&
        anchore-cli image wait gcr.io/new-indico/sklearn-ubuntu:0.19.2 &&
        echo "Analysis complete" &&
        anchore-cli image vuln gcr.io/new-indico/sklearn-ubuntu:0.19.2 all | grep -v Low | grep -v Negligible | grep -v Medium &&
        if [ "$ANCHORE_FAIL_ON_POLICY" == "true" ] ; then anchore-cli evaluate check gcr.io/new-indico/sklearn-ubuntu:0.19.2  ; fi'
      encrypted_env_file: env.encrypted
